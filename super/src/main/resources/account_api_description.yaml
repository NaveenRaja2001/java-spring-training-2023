openapi: 3.0.3
info:
  title: Helper - API Documentation
  description: API Service Documentation for Helper app
  version: 1.0.0
servers:
  - url: http://localhost:8081
tags:
  - name: registration
    description: User Service API endpoints
  - name: admin
    description: Admin Service API endpoints
  - name: resident
    description: Resident Service API endpoints
  - name: helper
    description: Resident Service API endpoints

paths:


  #<-- Endpoint for creation of resident user:START -->
  /registration/residents:
    post:
      tags:
        - registration
      summary: Endpoint for creation of resident user
      operationId: createResidentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidentUserCreationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    #<-- Endpoint for creation of resident user:END -->

    #<-- Endpoint for creation of helper user:START -->
  /registration/helpers:
    post:
      tags:
        - registration
      summary: Endpoint for creation of helper user
      operationId: createHelperUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelperUserCreationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    #<-- Endpoint for creation of helper user:END -->
    #<-- Endpoint for creation of helper user:START -->
  /admin/requested-users:
    get:
      tags:
        - admin
      summary: Retrieves  all requested user
      operationId: getAllRequestedUser
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestedUserDetails'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    #<-- Endpoint for creation of helper user:END -->

    #<-- Endpoint for creation of resident user:START -->
  /admin/approve:
    put:
      tags:
        - admin
      summary: Endpoint for approving the user
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
          required: true
      operationId: approveUser
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

          #<-- Endpoint for creation of resident user:END -->

          #<-- Endpoint for creation of helper user:START -->
  /admin/{userId}:
    delete:
      tags:
        - admin
      summary: Delete user or helper
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      operationId: deleteUsers
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

      #<-- Endpoint for creation of helper user:END -->

      #<-- Endpoint for creation of resident user:START -->
  /resident/timeslot:
    get:
      tags:
        - resident
      summary: Endpoint for retrieving available timeslot
      operationId: getAllTimeslots
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlotResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

        #<-- Endpoint for creation of resident user:END -->

        #<-- Endpoint for creation of resident user:START -->
  /resident/available:
    get:
      tags:
        - resident
      summary: Endpoint for retrieving available helpers
      parameters:
        - in: query
          name: date
          schema:
            type: string
          required: true
        - in: query
          name: timeslotId
          schema:
            type: integer
          required: true
      operationId: getAllAvailableHelpers
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablityHelperResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

        #<-- Endpoint for creation of resident user:END -->
        #<-- Endpoint for creation of helper user:START -->
  /resident/booking:
    post:
      tags:
        - resident
      summary: Endpoint for booking a helper
      operationId: bookHelper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingResquest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    #<-- Endpoint for creation of resident user:START -->
  /helpers/booking:
    get:
      tags:
        - helper
      summary: Endpoint for retrieving helpers booking
      parameters:
        - in: query
          name: helperId
          schema:
            type: integer
          required: true
      operationId: getAllHelpersBooking
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelperBookingResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

        #<-- Endpoint for creation of resident user:END -->
    #<-- Endpoint for creation of resident user:START -->
  /admin/helper:
    patch:
      tags:
        - admin
      summary: Endpoint for updating of helper
      operationId: updateHelper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelperUserCreationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

      #<-- Endpoint for creation of resident user:END -->


      #<-- Endpoint for creation of resident user:START -->
  /admin/resident:
    patch:
      tags:
        - admin
      summary: Endpoint for updating of resident
      operationId: updateResident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidentUserCreationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    #<-- Endpoint for creation of resident user:END -->
  /auth/login:
    post:
      tags:
        - registration
      summary: Authenticate User
      operationId: loginUser
      requestBody:
        description: Authenticate a user with email and password
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  #<-- Endpoint for creation of resident user:START -->
  /admin/residents:
    post:
      tags:
        - admin
      summary: Endpoint for creation of resident user
      operationId: createResidentAndApprove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidentUserCreationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    #<-- Endpoint for creation of resident user:END -->

  /admin/helpers:
    post:
      tags:
        - admin
      summary: Endpoint for creation of helper user
      operationId: createHelperAndApprove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelperUserCreationRequest'
      responses:
        '201':
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationResponse'
        '400':
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    #<-- Endpoint for creation of helper user:END -->
components:
  schemas:

    ## START - Response Schemas ##
    SuccessResponse:
      type: object
      properties:
        statusCode:
          type: integer
        data:
          type: object
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - properties:
            statusCode:
              type: integer
              default: 400
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - properties:
            statusCode:
              type: integer
              default: 401
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - properties:
            statusCode:
              type: integer
              default: 404
    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - properties:
            statusCode:
              type: integer
              default: 500
    ## END - Response Schemas ##

    ResidentUserCreationRequest:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        DOB:
          type: string
        gender:
          type: string
        email:
          type: string
        password:
          type: string

    UserCreationResponse:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        DOB:
          type: string
        gender:
          type: string
        email:
          type: string
        password:
          type: string
        status:
          type: string
        role:
          type: array
          items:
            $ref: '#/components/schemas/RoleResponse'

    RoleResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        name:
          type: string


    HelperUserCreationRequest:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        DOB:
          type: string
        gender:
          type: string
        email:
          type: string
        password:
          type: string
        helperdetails:
          type: object
          items :
            $ref: '#/components/schemas/HelperDetails'

    HelperDetails:
      type: object
      properties:
        id:
          type: integer
        phonenumber:
          type: integer
          format: int64
        skill:
          type: string
        status:
          type: string

    RequestedUserDetails:
      type: array
      items:
        $ref: '#/components/schemas/UserCreationResponse'

    TimeSlotResponse:
      type: array
      items:
        $ref: '#/components/schemas/TimeSlot'

    TimeSlot:
      type: object
      properties:
        id:
          type: integer
        starttime:
          type: string
        endtime:
          type: string

    AvailablityHelperResponse:
      type: array
      items:
        $ref: '#/components/schemas/HelperDetails'

    BookingResquest:
      type: object
      properties:
        userId:
          type: integer
        HelperId:
          type: integer
        date:
          type: string
        timeSlotId:
          type: integer

    HelperBookingResponse:
      type: array
      items:
        $ref: '#/components/schemas/BookingResponse'


    BookingResponse:
      type: object
      properties:
        userId:
          type: integer
        HelperId:
          type: integer
        date:
          type: string
        timeslot:
          type: object
          items :
            $ref: '#/components/schemas/TimeSlot'

    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthenticationResponse:
      type: object
      properties:
        access_token:
          type: string
        email:
          type: string
          format: email
        message:
          type: string


    ## START - Schemas Examples for Reference ##

    ## Long Ref ##
    # departmentId:
    #   type: integer
    #   format: int64
    #   example: 1

    ## ENUM Ref ##
    # status:
    #   type: string
    #   description: Enum Example
    #   example: approved
    #   enum:
    #     - placed
    #     - approved
    #     - delivered

    ## Array without Schema Ref ##
    # arrayWithoutSchema:
    #   type: array
    #   items:
    #     type: string

    ## Array with Schema Ref ##
    # arrayWithSchema:
    #   type: array
    #   items:
    #     $ref: '#/components/schemas/CandidateUserCollegeDetails'

  ## END - Schemas Examples for reference ##